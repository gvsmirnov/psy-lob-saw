<project xmlns:ivy="antlib:org.apache.ivy.ant" name="psy-lob-saw" default="build">
	<property name="ivy.install.version" value="2.0.0-beta1" />
	<property name="ivy.jar.dir" value="${basedir}/ivy" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
	<property name="build.dir" value="build" />
	<property name="src.dir" value="src" />
	<property name="experiments.dir" value="experiments" />
	<target name="download-ivy" unless="skip.download">
		<mkdir dir="${ivy.jar.dir}" />
		<!-- 
		download Ivy from web site so that it can be used even without any special installation
		-->
		<echo message="installing ivy..." />
		<get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>
	<!--
	this target is not necessary if you put ivy.jar in your ant lib directory if you already have ivy in your ant lib, you can simply remove this target and the dependency the 'go' target has on it =================================
	-->
	<target name="install-ivy" depends="download-ivy" description="--> install ivy">
		<!--
		try to load ivy here from local ivy dir, in case the user has not already dropped it into ant's lib dir (note that the latter copy will always take precedence). We will not fail as long as local lib dir exists (it may be empty) and ivy is in at least one of ant's lib dir or the local lib dir.
		-->
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>

	<target name="build" depends="install-ivy" description=" resolve dependencies, compile and run the project">
		<ivy:retrieve />
		<ivy:cachepath pathid="lib.path.id" />
		<echo message="compiling..." />
		<mkdir dir="${build.dir}" />
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="lib.path.id" />
		<javac srcdir="${experiments.dir}" destdir="${build.dir}" classpathref="lib.path.id" />
	</target>
	<target name="run-unaligned-experiments" depends="build" description=" run experiments">
		<ivy:retrieve />
		<ivy:cachepath pathid="lib.path.id" />
		<echo message="running experiments..." />
		<java classpathref="lib.path.id" classname="com.google.caliper.Runner" fork="true">
			<classpath path="${build.dir}" />
			<arg value="--warmupMillis" />
			<arg value="1000" />
			<arg value="--runMillis" />
			<arg value="5000" />
			<arg value="alignment.UnalignedMemoryAccessCostBenchmark" />
			<arg value="-Doffset=0,1,2,3,4,5,6,7,8,16,24,32,40,48,56,60" />
			<arg value="-DsizeInPages=1,2,4,8,16,32,64,128,256,512,1024,2048" />
		</java>
	</target>
	<target name="run-unaligned-fibonacci" depends="build" description=" run experiments">
		<ivy:retrieve />
		<ivy:cachepath pathid="lib.path.id" />
		<echo message="running experiments..." />
		<java classpathref="lib.path.id" classname="com.google.caliper.Runner" fork="true">
			<classpath path="${build.dir}" />
			<arg value="--warmupMillis" />
			<arg value="1000" />
			<arg value="--runMillis" />
			<arg value="5000" />
			<arg value="alignment.UnalignedMemoryAccessFibonacciBenchmark" />
			<arg value="-Doffset=0,1,2,3,4,5,6,7,8,16,24,32,40,48,56,60" />
			<arg value="-DsizeInPages=1,2,4,8,16,32,64,128,256,512,1024,2048" />
		</java>
	</target>
	<target name="run-page" depends="build" description=" run experiments">
		<ivy:retrieve />
		<ivy:cachepath pathid="lib.path.id" />
		<echo message="running experiments..." />
		<java classpathref="lib.path.id" classname="com.google.caliper.Runner" fork="true">
			<classpath path="${build.dir}" />
			<arg value="--warmupMillis" />
			<arg value="1000" />
			<arg value="--runMillis" />
			<arg value="5000" />
			<arg value="alignment.UnalignedPageIOBenchmark" />
		</java>
	</target>

	<target name="clean" description="--> clean the project">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${build.dir}" />
		</delete>
	</target>

	<target name="clean-ivy" description="--> clean the ivy installation">
		<delete dir="${ivy.jar.dir}" />
	</target>

	<target name="clean-cache" depends="install-ivy" description="--> clean the ivy cache">
		<ivy:cleancache />
	</target>
</project>